define(["require","exports","module","fs","./lib/jasmine-1.2.0/jasmine","./lib/jasmine.extensions","../build/fragments/source-references","../build/output/knockout-latest.js","./arrayEditDetectionBehaviors","./asyncBehaviors","./dependentObservableBehaviors","./pureComputedBehaviors","./expressionRewritingBehaviors","./extenderBehaviors","./mappingHelperBehaviors","./observableArrayBehaviors","./observableArrayChangeTrackingBehaviors","./observableBehaviors","./subscribableBehaviors","./utilsBehaviors"],function(require,exports,module){function failureFilter(e){return!e.passed()}console.log("Running Knockout tests in Node.js");var fs=require("fs"),jasmine=require("./lib/jasmine-1.2.0/jasmine");for(var key in jasmine)global[key]=jasmine[key];require("./lib/jasmine.extensions"),process.argv.length>2&&process.argv[2]=="--source"?(global.DEBUG=!0,global.ko=global.koExports={},global.knockoutDebugCallback=function(sources){sources.unshift("build/fragments/extern-pre.js"),sources.push("build/fragments/extern-post.js"),eval(sources.reduce(function(e,t){return e+"\n"+fs.readFileSync(t)},""))},require("../build/fragments/source-references")):global.ko=require("../build/output/knockout-latest.js"),require("./arrayEditDetectionBehaviors"),require("./asyncBehaviors"),require("./dependentObservableBehaviors"),require("./pureComputedBehaviors"),require("./expressionRewritingBehaviors"),require("./extenderBehaviors"),require("./mappingHelperBehaviors"),require("./observableArrayBehaviors"),require("./observableArrayChangeTrackingBehaviors"),require("./observableBehaviors"),require("./subscribableBehaviors"),require("./utilsBehaviors");var env=jasmine.jasmine.getEnv();env.addReporter({reportRunnerResults:function(e){var t=e.results();e.suites().map(function(e){var t=e.results();return t.description=e.description,t}).filter(failureFilter).forEach(function(e){console.error(e.description),e.getItems().filter(failureFilter).forEach(function(e){console.error("	"+e.description),e.getItems().filter(failureFilter).forEach(function(e){console.error("		"+e.message)})})}),console.log("Total:"+t.totalCount+" Passed:"+t.passedCount+" Failed:"+t.failedCount),process.exit(t.failedCount)}}),env.execute()});