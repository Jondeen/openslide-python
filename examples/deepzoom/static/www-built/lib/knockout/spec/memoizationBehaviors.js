(function(e){var t;define([],function(){return function(){function e(e){return e=e.replace("<!--","").replace("-->",""),ko.memoization.parseMemoText(e)}describe("Memoization",function(){it("Should only accept a function",function(){var e=!1;try{ko.memoization.memoize({})}catch(t){e=!0}expect(e).toEqual(!0)}),it("Should return an HTML comment",function(){var e=ko.memoization.memoize(function(){});expect(typeof e).toEqual("string"),expect(e.substring(0,4)).toEqual("<!--")}),it("Should call the function when unmemoizing",function(){var t=!1,n=ko.memoization.memoize(function(){t=!0});ko.memoization.unmemoize(e(n)),expect(t).toEqual(!0)}),it("Should not be able to unmemoize more than once",function(){var t=ko.memoization.memoize(function(){});ko.memoization.unmemoize(e(t));var n=!1;try{ko.memoization.unmemoize(e(t))}catch(r){n=!0}expect(n).toEqual(!0)}),it("Should be able to find memos in a DOM tree and unmemoize them, passing the memo node as a param",function(){var e=document.createElement("DIV"),t=!1;e.innerHTML="Hello "+ko.memoization.memoize(function(n){expect(n.parentNode).toEqual(e),t=!0}),ko.memoization.unmemoizeDomNodeAndDescendants(e),expect(t).toEqual(!0)}),it("After unmemoizing a DOM tree, removes the memo nodes",function(){var e=document.createElement("DIV");e.innerHTML="Hello "+ko.memoization.memoize(function(){}),expect(e.childNodes.length).toEqual(2),ko.memoization.unmemoizeDomNodeAndDescendants(e),expect(e.childNodes.length).toEqual(1)})})}.call(e),t})})(this);