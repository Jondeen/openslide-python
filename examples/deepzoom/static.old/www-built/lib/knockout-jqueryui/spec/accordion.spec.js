(function(e){var t;define(["jquery"],function(n){return function(){(function(){"use strict";describe("The accordion binding",function(){var e,t;it("should handle each option of the widget",function(){var e={collapsible:[!1,!0],disabled:[!1,!0],event:["click","mouseover"],header:["> li > :first-child,> :not(li):even","h3"]};switch(getMajorMinorVersion($.ui.version)){case"1.8":$.extend(e,{animated:["slide",!1],autoHeight:[!0,!1],clearStyle:[!1,!0],fillSpace:[!1,!0],navigation:[!1,!0]});break;default:$.extend(e,{animate:[{},1],heightStyle:["auto","content"]})}testWidgetOptions("accordion",e)}),t=function(){var e,t,n;e=$('<div data-bind="accordion: { icons: icons }"></div>').prependTo("body"),t={icons:ko.observable({header:"ui-icon-triangle-1-e",headerSelected:"ui-icon-triangle-1-s"})},ko.applyBindings(t,e[0]),n=e.accordion("option","icons"),expect(n.header).toEqual("ui-icon-triangle-1-e"),expect(n.headerSelected).toEqual("ui-icon-triangle-1-s"),t.icons({header:"ui-icon-plus",headerSelected:"ui-icon-minus"}),n=e.accordion("option","icons"),expect(n.header).toEqual("ui-icon-plus"),expect(n.headerSelected).toEqual("ui-icon-minus"),ko.removeNode(e[0])},e=function(){var e,t,n;e=$('<div data-bind="accordion: { icons: icons }"></div>').prependTo("body"),t={icons:ko.observable({header:"ui-icon-triangle-1-e",activeHeader:"ui-icon-triangle-1-s"})},ko.applyBindings(t,e[0]),n=e.accordion("option","icons"),expect(n.header).toEqual("ui-icon-triangle-1-e"),expect(n.activeHeader).toEqual("ui-icon-triangle-1-s"),t.icons({header:"ui-icon-plus",activeHeader:"ui-icon-minus"}),n=e.accordion("option","icons"),expect(n.header).toEqual("ui-icon-plus"),expect(n.activeHeader).toEqual("ui-icon-minus"),ko.removeNode(e[0])},it("should handle the active option",function(){var e,t;e=$('<div data-bind="accordion: { active: active }"><h3>a</h3><div>a</div><h3>b</h3><div>b</div></div>').prependTo("body"),t={active:ko.observable(0)},ko.applyBindings(t,e[0]),expect(e.accordion("option","active")).toEqual(0),t.active(1),expect(e.accordion("option","active")).toEqual(1),ko.removeNode(e[0])}),it("should handle each event of the widget",function(){var e,t;e=$('<div data-bind="accordion: { create: createEventHandler }"></div>').prependTo("body"),t={createEventHandler:jasmine.createSpy()},ko.applyBindings(t,e[0]),expect(t.createEventHandler).toHaveBeenCalled(),ko.removeNode(e[0])}),it("should write the active panel's index to the viewmodel's bound property.",function(){var e,t;e=$('<div data-bind="accordion: { active: active, animate: false, animated: false }"><h3>a</h3><div>a</div><h3>b</h3><div>b</div></div>').prependTo("body"),t={active:ko.observable(0)},ko.applyBindings(t,e[0]),e.accordion("option","active",1),expect(t.active.peek()).toEqual(1),ko.removeNode(e[0])}),it("should write false to the viewmodel's bound property when the panels collapse.",function(){var e,t;e=$('<div data-bind="accordion: { active: active, animate: false, animated: false, collapsible: true }"><h3>a</h3><div>a</div><h3>b</h3><div>b</div></div>').prependTo("body"),t={active:ko.observable(0)},ko.applyBindings(t,e[0]),e.accordion("option","active",!1),expect(t.active.peek()).toEqual(!1),ko.removeNode(e[0])}),it("should write the element to the widget observable",function(){var e,t,n;e=$('<div data-bind="accordion: { widget: widget, disabled: true }"><h3>a</h3><div>a</div><h3>b</h3><div>b</div></div>').prependTo("body"),t={widget:ko.observable()},ko.applyBindings(t,e[0]),expect(t.widget()).toBeDefined(),n=t.widget().accordion("option","disabled"),expect(n).toBe(!0),ko.removeNode(e[0])});switch(getMajorMinorVersion($.ui.version)){case"1.8":it("should handle the icons option",t);break;default:it("should handle the icons option",e)}})})()}.call(e),t})})(this);