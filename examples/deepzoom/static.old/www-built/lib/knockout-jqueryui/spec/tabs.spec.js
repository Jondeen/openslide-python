(function(e){var t;define(["jquery"],function(n){return function(){(function(){"use strict";describe("The tabs binding",function(){var e,t,n,r,i,s,o,u;e=function(){testWidgetOptions("tabs",{ajaxOptions:[null,{async:!1}],cache:[!1,!0],collapsible:[!1,!0],disabled:[[],[]],event:["click","mouseover"],fx:[null,{height:"toggle",duration:200}],idPrefix:["ui-tabs-","ui-tabs-54"],panelTemplate:["<div></div>","<p></p>"],spinner:["<em>Loading&#8230;</em>","<em>Please wait&#8230;</em>"],tabTemplate:['<li><a href="#{href}"><span>#{label}</span></a></li>','<li><a href="#{href}"><label>#{label}</label></a></li>']})},t=function(){testWidgetOptions("tabs",{collapsible:[!1,!0],disabled:[!1,!0],event:["click","mouseover"],heightStyle:["content","auto"],hide:[null,!1],show:[null,!1]})},n=function(){var e,t;e=$('<div data-bind="tabs: { selected: selected }"><ul><li><a href="#tabs1">a</a></li><li><a href="#tabs2">b</a></li></ul><div id="tabs1"></div><div id="tabs2"></div></div>').prependTo("body"),t={selected:ko.observable(0)},ko.applyBindings(t,e[0]),expect(e.tabs("option","selected")).toEqual(0),t.selected(1),expect(e.tabs("option","selected")).toEqual(1),ko.removeNode(e[0])},r=function(){var e,t;e=$('<div data-bind="tabs: { active: active }"><ul><li><a href="#tabs1">a</a></li><li><a href="#tabs2">b</a></li></ul><div id="tabs1"></div><div id="tabs2"></div></div>').prependTo("body"),t={active:ko.observable(0)},ko.applyBindings(t,e[0]),expect(e.tabs("option","active")).toEqual(0),t.active(1),expect(e.tabs("option","active")).toEqual(1),e.tabs("option","active",0),expect(t.active.peek()).toEqual(0),ko.removeNode(e[0])},i=function(){var e,t;e=$('<div data-bind="tabs: { create: createEventHandler }"></div>').prependTo("body"),t={createEventHandler:jasmine.createSpy()},ko.applyBindings(t,e[0]),expect(t.createEventHandler).toHaveBeenCalled(),ko.removeNode(e[0])},s=function(){var e,t,n;e=$('<div data-bind="tabs: { widget: widget, collapsible: true }"></div>').prependTo("body"),t={widget:ko.observable()},ko.applyBindings(t,e[0]),expect(t.widget()).toBeDefined(),n=t.widget().tabs("option","collapsible"),expect(n).toBe(!0),ko.removeNode(e[0])},o=function(){var e,t;e=$('<div data-bind="tabs: { selected: outerSelected }">  <ul>    <li><a href="#outer1">a</a></li>    <li><a href="#outer2">b</a></li>  </ul>  <div id="outer1">    <div data-bind="tabs: { selected: innerSelected }">      <ul>        <li><a href="#inner1">a</a></li>        <li><a href="#inner2">b</a></li>      </ul>      <div id="inner1"></div>      <div id="inner2"></div>    </div>  </div>  <div id="outer2"></div></div>').prependTo("body"),t={outerSelected:ko.observable(0),innerSelected:ko.observable(0)},ko.applyBindings(t,e[0]),expect(t.outerSelected()).toEqual(0),expect(t.innerSelected()).toEqual(0),e.find('a[href$="#inner2"]').click(),expect(t.outerSelected()).toEqual(0),expect(t.innerSelected()).toEqual(1),ko.removeNode(e[0])},u=function(){var e,t;e=$('<div data-bind="tabs: { active: outerActive }">  <ul>    <li><a href="#outer1">a</a></li>    <li><a href="#outer2">b</a></li>  </ul>  <div id="outer1">    <div data-bind="tabs: { active: innerActive }">      <ul>        <li><a href="#inner1">a</a></li>        <li><a href="#inner2">b</a></li>      </ul>      <div id="inner1">a</div>      <div id="inner2">b</div>    </div>  </div>  <div id="outer2">b</div></div>').prependTo("body"),t={outerActive:ko.observable(0),innerActive:ko.observable(0)},ko.applyBindings(t,e[0]),expect(t.outerActive()).toEqual(0),expect(t.innerActive()).toEqual(0),e.find('a[href$="#inner2"]').click(),expect(t.outerActive()).toEqual(0),expect(t.innerActive()).toEqual(1),ko.removeNode(e[0])};switch(getMajorMinorVersion($.ui.version)){case"1.8":it("should handle each option of the widget",e),it("should handle the selected option",n),it("should handle each event of the widget",i),it("should write the element to the widget observable",s),it("should be able to handle nested tabs",o);break;default:it("should handle each option of the widget",t),it("should handle the active option",r),it("should handle each event of the widget",i),it("should write the element to the widget observable",s),it("should be able to handle nested tabs",u)}})})()}.call(e),t})})(this);