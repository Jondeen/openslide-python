/*
 * OpenSeadragon - Viewport
 *
 * Copyright (C) 2009 CodePlex Foundation
 * Copyright (C) 2010-2013 OpenSeadragon contributors
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * - Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 * - Neither the name of CodePlex Foundation nor the names of its
 *   contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

(function(e){var t;define([],function(){return function(){(function(e){e.Viewport=function(t){var n=arguments;n.length&&n[0]instanceof e.Point&&(t={containerSize:n[0],contentSize:n[1],config:n[2]}),t.config&&(e.extend(!0,t,t.config),delete t.config),e.extend(!0,this,{containerSize:null,contentSize:null,zoomPoint:null,viewer:null,springStiffness:e.DEFAULT_SETTINGS.springStiffness,animationTime:e.DEFAULT_SETTINGS.animationTime,minZoomImageRatio:e.DEFAULT_SETTINGS.minZoomImageRatio,maxZoomPixelRatio:e.DEFAULT_SETTINGS.maxZoomPixelRatio,visibilityRatio:e.DEFAULT_SETTINGS.visibilityRatio,wrapHorizontal:e.DEFAULT_SETTINGS.wrapHorizontal,wrapVertical:e.DEFAULT_SETTINGS.wrapVertical,defaultZoomLevel:e.DEFAULT_SETTINGS.defaultZoomLevel,minZoomLevel:e.DEFAULT_SETTINGS.minZoomLevel,maxZoomLevel:e.DEFAULT_SETTINGS.maxZoomLevel,degrees:e.DEFAULT_SETTINGS.degrees,homeFillsViewer:e.DEFAULT_SETTINGS.homeFillsViewer},t),this.centerSpringX=new e.Spring({initial:0,springStiffness:this.springStiffness,animationTime:this.animationTime}),this.centerSpringY=new e.Spring({initial:0,springStiffness:this.springStiffness,animationTime:this.animationTime}),this.zoomSpring=new e.Spring({initial:1,springStiffness:this.springStiffness,animationTime:this.animationTime}),this.resetContentSize(this.contentSize),this.goHome(!0),this.update()},e.Viewport.prototype={resetContentSize:function(t){return this.contentSize=t,this.contentAspectX=this.contentSize.x/this.contentSize.y,this.contentAspectY=this.contentSize.y/this.contentSize.x,this.fitWidthBounds=new e.Rect(0,0,1,this.contentAspectY),this.fitHeightBounds=new e.Rect(0,0,this.contentAspectY,this.contentAspectY),this.homeBounds=new e.Rect(0,0,1,this.contentAspectY),this.viewer&&this.viewer.raiseEvent("reset-size",{contentSize:t}),this},getHomeZoom:function(){if(this.defaultZoomLevel)return this.defaultZoomLevel;var e=this.contentAspectX/this.getAspectRatio();return this.homeFillsViewer?e>=1?e:1:e>=1?1:e},getHomeBounds:function(){var t=this.homeBounds.getCenter(),n=1/this.getHomeZoom(),r=n/this.getAspectRatio();return new e.Rect(t.x-n/2,t.y-r/2,n,r)},goHome:function(e){return this.viewer&&this.viewer.raiseEvent("home",{immediately:e}),this.fitBounds(this.getHomeBounds(),e)},getMinZoom:function(){var e=this.getHomeZoom(),t=this.minZoomLevel?this.minZoomLevel:this.minZoomImageRatio*e;return Math.min(t,e)},getMaxZoom:function(){var e=this.maxZoomLevel?this.maxZoomLevel:this.contentSize.x*this.maxZoomPixelRatio/this.containerSize.x;return Math.max(e,this.getHomeZoom())},getAspectRatio:function(){return this.containerSize.x/this.containerSize.y},getContainerSize:function(){return new e.Point(this.containerSize.x,this.containerSize.y)},getBounds:function(t){var n=this.getCenter(t),r=1/this.getZoom(t),i=r/this.getAspectRatio();return new e.Rect(n.x-r/2,n.y-i/2,r,i)},getCenter:function(t){var n=new e.Point(this.centerSpringX.current.value,this.centerSpringY.current.value),r=new e.Point(this.centerSpringX.target.value,this.centerSpringY.target.value),i,s,o,u,a,f,l,c;return t?n:this.zoomPoint?(i=this.pixelFromPoint(this.zoomPoint,!0),s=this.getZoom(),o=1/s,u=o/this.getAspectRatio(),a=new e.Rect(n.x-o/2,n.y-u/2,o,u),f=this.zoomPoint.minus(a.getTopLeft()).times(this.containerSize.x/a.width),l=f.minus(i),c=l.divide(this.containerSize.x*s),r.plus(c)):r},getZoom:function(e){return e?this.zoomSpring.current.value:this.zoomSpring.target.value},_applyBoundaryConstraints:function(t,n){var r,i,s,o,u,a,f=0,l=0,c=new e.Rect(t.x,t.y,t.width,t.height);r=this.visibilityRatio*c.width,i=this.visibilityRatio*c.height,s=c.x+c.width,o=1-c.x,u=c.y+c.height,a=this.contentAspectY-c.y,this.wrapHorizontal||(s<r&&(f=r-s),o<r&&(f=f?(f+o-r)/2:o-r)),this.wrapVertical||(u<i&&(l=i-u),a<i&&(l=l?(l+a-i)/2:a-i));if(f||l||n)c.x+=f,c.y+=l,c.width>1&&(c.x=.5-c.width/2),c.height>this.contentAspectY&&(c.y=this.contentAspectY/2-c.height/2);return this.viewer&&this.viewer.raiseEvent("constrain",{immediately:n}),c},applyConstraints:function(e){var t=this.getZoom(),n=Math.max(Math.min(t,this.getMaxZoom()),this.getMinZoom()),r,i;return t!=n&&this.zoomTo(n,this.zoomPoint,e),r=this.getBounds(),i=this._applyBoundaryConstraints(r,e),(r.x!==i.x||r.y!==i.y||e)&&this.fitBounds(i,e),this},ensureVisible:function(e){return this.applyConstraints(e)},_fitBounds:function(t,n){n=n||{};var r=n.immediately||!1,i=n.constraints||!1,s=this.getAspectRatio(),o=t.getCenter(),u=new e.Rect(t.x,t.y,t.width,t.height),a,f,l,c,h,p;return u.getAspectRatio()>=s?(u.height=t.width/s,u.y=o.y-u.height/2):(u.width=t.height*s,u.x=o.x-u.width/2),i&&(h=u.getAspectRatio()),this.panTo(this.getCenter(!0),!0),this.zoomTo(this.getZoom(!0),null,!0),a=this.getBounds(),f=this.getZoom(),l=1/u.width,i&&(p=Math.max(Math.min(l,this.getMaxZoom()),this.getMinZoom()),l!==p&&(l=p,u.width=1/l,u.x=o.x-u.width/2,u.height=u.width/h,u.y=o.y-u.height/2),u=this._applyBoundaryConstraints(u,r)),l==f||u.width==a.width?this.panTo(i?u.getCenter():o,r):(c=a.getTopLeft().times(this.containerSize.x/a.width).minus(u.getTopLeft().times(this.containerSize.x/u.width)).divide(this.containerSize.x/a.width-this.containerSize.x/u.width),this.zoomTo(l,c,r))},fitBounds:function(e,t){return this._fitBounds(e,{immediately:t,constraints:!1})},fitBoundsWithConstraints:function(e,t){return this._fitBounds(e,{immediately:t,constraints:!0})},fitVertically:function(e){var t=this.getCenter();return this.wrapHorizontal&&(t.x=(1+t.x%1)%1,this.centerSpringX.resetTo(t.x),this.centerSpringX.update()),this.wrapVertical&&(t.y=(this.contentAspectY+t.y%this.contentAspectY)%this.contentAspectY,this.centerSpringY.resetTo(t.y),this.centerSpringY.update()),this.fitBounds(this.fitHeightBounds,e)},fitHorizontally:function(e){var t=this.getCenter();return this.wrapHorizontal&&(t.x=(this.contentAspectX+t.x%this.contentAspectX)%this.contentAspectX,this.centerSpringX.resetTo(t.x),this.centerSpringX.update()),this.wrapVertical&&(t.y=(1+t.y%1)%1,this.centerSpringY.resetTo(t.y),this.centerSpringY.update()),this.fitBounds(this.fitWidthBounds,e)},panBy:function(t,n){var r=new e.Point(this.centerSpringX.target.value,this.centerSpringY.target.value);return t=t.rotate(-this.degrees,new e.Point(0,0)),this.panTo(r.plus(t),n)},panTo:function(e,t){return t?(this.centerSpringX.resetTo(e.x),this.centerSpringY.resetTo(e.y)):(this.centerSpringX.springTo(e.x),this.centerSpringY.springTo(e.y)),this.viewer&&this.viewer.raiseEvent("pan",{center:e,immediately:t}),this},zoomBy:function(t,n,r){return n instanceof e.Point&&!isNaN(n.x)&&!isNaN(n.y)&&(n=n.rotate(-this.degrees,new e.Point(this.centerSpringX.target.value,this.centerSpringY.target.value))),this.zoomTo(this.zoomSpring.target.value*t,n,r)},zoomTo:function(t,n,r){return this.zoomPoint=n instanceof e.Point&&!isNaN(n.x)&&!isNaN(n.y)?n:null,r?this.zoomSpring.resetTo(t):this.zoomSpring.springTo(t),this.viewer&&this.viewer.raiseEvent("zoom",{zoom:t,refPoint:n,immediately:r}),this},setRotation:function(e){return!this.viewer||!this.viewer.drawer.canRotate()?this:(e=(e+360)%360,this.degrees=e,this.viewer.forceRedraw(),this.viewer!==null&&this.viewer.raiseEvent("rotate",{degrees:e}),this)},getRotation:function(){return this.degrees},resize:function(t,n){var r=this.getBounds(),i=r,s;return this.containerSize=new e.Point(t.x,t.y),n&&(s=t.x/this.containerSize.x,i.width=r.width*s,i.height=i.width/this.getAspectRatio()),this.viewer&&this.viewer.raiseEvent("resize",{newContainerSize:t,maintain:n}),this.fitBounds(i,!0)},update:function(){var e=this.centerSpringX.current.value,t=this.centerSpringY.current.value,n=this.zoomSpring.current.value,r,i,s,o;return this.zoomPoint&&(r=this.pixelFromPoint(this.zoomPoint,!0)),this.zoomSpring.update(),this.zoomPoint&&this.zoomSpring.current.value!=n?(i=this.pixelFromPoint(this.zoomPoint,!0),s=i.minus(r),o=this.deltaPointsFromPixels(s,!0),this.centerSpringX.shiftBy(o.x),this.centerSpringY.shiftBy(o.y)):this.zoomPoint=null,this.centerSpringX.update(),this.centerSpringY.update(),this.centerSpringX.current.value!=e||this.centerSpringY.current.value!=t||this.zoomSpring.current.value!=n},deltaPixelsFromPoints:function(e,t){return e.times(this.containerSize.x*this.getZoom(t))},deltaPointsFromPixels:function(e,t){return e.divide(this.containerSize.x*this.getZoom(t))},pixelFromPoint:function(e,t){var n=this.getBounds(t);return e.minus(n.getTopLeft()).times(this.containerSize.x/n.width)},pointFromPixel:function(e,t){var n=this.getBounds(t);return e.divide(this.containerSize.x/n.width).plus(n.getTopLeft())},viewportToImageCoordinates:function(t,n){return arguments.length==1?this.viewportToImageCoordinates(t.x,t.y):new e.Point(t*this.contentSize.x,n*this.contentSize.y*this.contentAspectX)},imageToViewportCoordinates:function(t,n){return arguments.length==1?this.imageToViewportCoordinates(t.x,t.y):new e.Point(t/this.contentSize.x,n/this.contentSize.y/this.contentAspectX)},imageToViewportRectangle:function(t,n,r,i){var s,o,u;return arguments.length==1?(u=t,this.imageToViewportRectangle(u.x,u.y,u.width,u.height)):(s=this.imageToViewportCoordinates(t,n),o=this.imageToViewportCoordinates(r,i),new e.Rect(s.x,s.y,o.x,o.y))},viewportToImageRectangle:function(t,n,r,i){var s,o,u;return arguments.length==1?(u=t,this.viewportToImageRectangle(u.x,u.y,u.width,u.height)):(s=this.viewportToImageCoordinates(t,n),o=this.viewportToImageCoordinates(r,i),new e.Rect(s.x,s.y,o.x,o.y))},viewerElementToImageCoordinates:function(e){var t=this.pointFromPixel(e,!0);return this.viewportToImageCoordinates(t)},imageToViewerElementCoordinates:function(e){var t=this.imageToViewportCoordinates(e);return this.pixelFromPoint(t,!0)},windowToImageCoordinates:function(e){var t=e.minus(OpenSeadragon.getElementPosition(this.viewer.element));return this.viewerElementToImageCoordinates(t)},imageToWindowCoordinates:function(e){var t=this.imageToViewerElementCoordinates(e);return t.plus(OpenSeadragon.getElementPosition(this.viewer.element))},viewerElementToViewportCoordinates:function(e){return this.pointFromPixel(e,!0)},viewportToViewerElementCoordinates:function(e){return this.pixelFromPoint(e,!0)},windowToViewportCoordinates:function(e){var t=e.minus(OpenSeadragon.getElementPosition(this.viewer.element));return this.viewerElementToViewportCoordinates(t)},viewportToWindowCoordinates:function(e){var t=this.viewportToViewerElementCoordinates(e);return t.plus(OpenSeadragon.getElementPosition(this.viewer.element))},viewportToImageZoom:function(e){var t=this.viewer.source.dimensions.x,n=this.getContainerSize().x,r=n/t;return e*r},imageToViewportZoom:function(e){var t=this.viewer.source.dimensions.x,n=this.getContainerSize().x,r=t/n;return e*r}}})(OpenSeadragon)}.call(e),t})})(this);