(function(e){var t;define([],function(){return function(){describe("unwrapObservable",function(){it("Should return the underlying value of observables",function(){var e={abc:123},t=ko.observable(123),n=ko.observable(e),r=ko.observable(null),i=ko.observable(undefined),s=ko.computed(function(){return t()+1});expect(ko.utils.unwrapObservable(t)).toBe(123),expect(ko.utils.unwrapObservable(n)).toBe(e),expect(ko.utils.unwrapObservable(r)).toBe(null),expect(ko.utils.unwrapObservable(i)).toBe(undefined),expect(ko.utils.unwrapObservable(s)).toBe(124)}),it("Should return the supplied value for non-observables",function(){var e={abc:123};expect(ko.utils.unwrapObservable(123)).toBe(123),expect(ko.utils.unwrapObservable(e)).toBe(e),expect(ko.utils.unwrapObservable(null)).toBe(null),expect(ko.utils.unwrapObservable(undefined)).toBe(undefined)}),it("Should be aliased as ko.unwrap",function(){expect(ko.unwrap).toBe(ko.utils.unwrapObservable),expect(ko.unwrap(ko.observable("some value"))).toBe("some value")})}),describe("arrayForEach",function(){it("Should go call the callback for each element of the array, in order",function(){var e=jasmine.createSpy("callback");ko.utils.arrayForEach(["a","b","c"],e),expect(e.calls.length).toBe(3),expect(e.calls[0].args).toEqual(["a",0]),expect(e.calls[1].args).toEqual(["b",1]),expect(e.calls[2].args).toEqual(["c",2])}),it("Should do nothing with empty arrays",function(){var e=jasmine.createSpy("callback");ko.utils.arrayForEach([],e),expect(e).not.toHaveBeenCalled()})}),describe("arrayIndexOf",function(){it("Should return the index if the element is found in the input array",function(){var e=ko.utils.arrayIndexOf(["a","b","c"],"b");expect(e).toBe(1)}),it("Should return -1 for empty arrays",function(){var e=ko.utils.arrayIndexOf([],"a");expect(e).toBe(-1)}),it("Should return -1 if the element is not found",function(){var e=ko.utils.arrayIndexOf(["a","b","c"],"d");expect(e).toBe(-1)}),it("Should return the first index if the element is found twice",function(){var e=ko.utils.arrayIndexOf(["a","b","c","c"],"c");expect(e).toBe(2)})}),describe("arrayRemoveItem",function(){it("Should remove the matching element if found",function(){var e=["a","b","c"];ko.utils.arrayRemoveItem(e,"a"),expect(e).toEqual(["b","c"])}),it("Should do nothing for empty arrays",function(){var e=[];ko.utils.arrayRemoveItem(e,"a"),expect(e).toEqual([])}),it("Should do nothing if no matching element is found",function(){var e=["a","b","c"];ko.utils.arrayRemoveItem(e,"d"),expect(e).toEqual(["a","b","c"])}),it("Should remove only the first matching element",function(){var e=["a","b","b","c"];ko.utils.arrayRemoveItem(e,"b"),expect(e).toEqual(["a","b","c"])})}),describe("arrayFirst",function(){var e,t;beforeEach(function(){e=jasmine.createSpy("matchB").andCallFake(function(e){return e.charAt(0)==="b"}),t=jasmine.createSpy("matchD").andCallFake(function(e){return e.charAt(0)==="d"})}),it("Should return the first matching element from the input array",function(){var t=ko.utils.arrayFirst(["a","b","c","b2"],e);expect(t).toBe("b")}),it("Should return null with empty arrays, and not call the predicate",function(){var e=jasmine.createSpy("predicate"),t=ko.utils.arrayFirst([],e);expect(t).toBe(null),expect(e).not.toHaveBeenCalled()}),it("Should test the predicate on every element before the first matching element",function(){ko.utils.arrayFirst(["a","b","c"],e),expect(e.calls.length).toBe(2),expect(e.calls[0].args).toEqual(["a",0]),expect(e.calls[1].args).toEqual(["b",1])}),it("Should return null if no element matches",function(){var e=ko.utils.arrayFirst(["a","b","c"],t);expect(e).toBe(null)}),it("Should test every element if no element matches",function(){ko.utils.arrayFirst(["a","b","c"],t),expect(t.calls.length).toBe(3),expect(t.calls[0].args).toEqual(["a",0]),expect(t.calls[1].args).toEqual(["b",1]),expect(t.calls[2].args).toEqual(["c",2])})}),describe("arrayGetDistinctValues",function(){it("Should remove duplicates from an array of non-unique values",function(){var e=ko.utils.arrayGetDistinctValues(["a","b","b","c","c"]);expect(e).toEqual(["a","b","c"])}),it("Should do nothing with an empty array",function(){var e=ko.utils.arrayGetDistinctValues([]);expect(e).toEqual([])}),it("Should do nothing with an array of unique values",function(){var e=ko.utils.arrayGetDistinctValues(["a","b","c"]);expect(e).toEqual(["a","b","c"])}),it("Should copy the input array",function(){var e=["a","b","c","c"],t=ko.utils.arrayGetDistinctValues(e);expect(t).not.toBe(e)}),it("Should copy the input array, even if it's unchanged",function(){var e=["a","b","c"],t=ko.utils.arrayGetDistinctValues(e);expect(t).toEqual(e),expect(t).not.toBe(e)})}),describe("arrayMap",function(){it("Should return the array with every element transformed by the map function",function(){var e=function(e,t){return e+t},t=ko.utils.arrayMap(["a","b","c"],e);expect(t).toEqual(["a0","b1","c2"])}),it("Should return empty arrays for empty arrays, and not call the map function",function(){var e=jasmine.createSpy("mapFunction"),t=ko.utils.arrayMap([],e);expect(t).toEqual([]),expect(e).not.toHaveBeenCalled()}),it("Should copy the array before returning it",function(){var e=function(e){return e},t=["a","b","c"],n=ko.utils.arrayMap(t,e);expect(n).toEqual(t),expect(n).not.toBe(t)})}),describe("arrayFilter",function(){it("Should filter the array to only show matching members",function(){var e=function(e,t){return t%2==0},t=ko.utils.arrayFilter(["a","b","c","d"],e);expect(t).toEqual(["a","c"])}),it("Should return empty arrays for empty arrays, and not call the filter function",function(){var e=jasmine.createSpy("filterFunction"),t=ko.utils.arrayFilter([],e);expect(t).toEqual([]),expect(e).not.toHaveBeenCalled()}),it("Should copy the array before returning it",function(){var e=function(e){return!0},t=["a","b","c"],n=ko.utils.arrayFilter(t,e);expect(n).toEqual(t),expect(n).not.toBe(t)})}),describe("arrayPushAll",function(){it("appends the second array elements to the first array",function(){var e=[1,2,3],t=["a","b","c"];ko.utils.arrayPushAll(e,t),expect(e).toEqual([1,2,3,"a","b","c"])}),it("does nothing if the second array is empty",function(){var e=[1,2,3];ko.utils.arrayPushAll(e,[]),expect(e).toEqual([1,2,3])})}),describe("Function.bind",function(){function e(){var e=[this];return e.push.apply(e,arguments),e}it("should bind a function to an object",function(){var t={},n=e.bind(t);expect(n("a")).toEqual([t,"a"])}),it("should accept a falsey `thisArg` argument",function(){ko.utils.arrayForEach(["",0,!1,NaN],function(t){var n=e.bind(t);expect(n()[0].constructor).toEqual(Object(t).constructor)})}),it("should bind a function to `null` or `undefined`",function(){var t=e.bind(null),n=t("a"),r=jasmine.getGlobal();expect(n[0]).toEqualOneOf([null,r]),expect(n[1]).toEqual("a"),t=e.bind(undefined),n=t("b"),expect(n[0]).toEqualOneOf([undefined,r]),expect(n[1]).toEqual("b"),t=e.bind(),n=t("b"),expect(n[0]).toEqualOneOf([undefined,r]),expect(n[1]).toEqual("b")}),it("should partially apply arguments",function(){var t={},n=e.bind(t,"a");expect(n()).toEqual([t,"a"]),n=e.bind(t,"a"),expect(n("b")).toEqual([t,"a","b"]),n=e.bind(t,"a","b"),expect(n()).toEqual([t,"a","b"]),expect(n("c","d")).toEqual([t,"a","b","c","d"])}),it("should append array arguments to partially applied arguments",function(){var t={},n=e.bind(t,"a");expect(n(["b"],"c")).toEqual([t,"a",["b"],"c"])}),it("should rebind functions correctly",function(){var t={},n={},r={},i=e.bind(t),s=i.bind(n,"a"),o=i.bind(r,"b");expect(i()).toEqual([t]),expect(s()).toEqual([t,"a"]),expect(o()).toEqual([t,"b"])})})}.call(e),t})})(this);